---
table:              user
id:                 id
fields:
    email:          email
    password:       password
    name:           text
    sort_name:      text
    alias:          text
    organisation:   text
    status:         text index
    registered:     timestamp index

field_sets:
    default:        email password name sort_name alias organisation status registered
    fetch:          @default 
    search:         id email name status
    admin_search:   id email name status role_names=roles.names
    add:            @default -registered -status -sort_name
    edit:           @default # hmmm.... what about ID?

record:             LFH::Record::User

relations:
    -               account+            # one or many
    -               address*            # none or many
    -               contact*        
    -               order*
    -               issue*
    -               user_role*
    -               role[user_role.user_id]
    -               mother=user               # mother() => user.mother_id => user.id
    -               father=user
    -               town=place                # town() => user.town_id => place.id
    -               recent_order=order ... where DATE_DIFF(created, blahblah)
    -
        name:       recent_order
        join:       order
        type:       many

        # either lkey/rkey
        lkey:       id
        rkey:       user_id

        # or explicit joins
        on:      
            -       t{DATE_DIFF(<R>.created, blah) < x}
            -       s{BLAH BLAH NO INTERPOLATION <X> <Y>}
            -       some_key                # l.some_key = r.some_key
            -       lkey=rkey               # l.lkey = r.rkey
            -       [lkey, '<', rkey]       # l.lkey < r.rkey
            -       


relations:
    addresses:      addresses[user_id=id]
    contacts:       contacts[user_id=id]
    orders:         orders[user_id=id]   order=created
    issues:         issues[user_id=id]   order='severity DESC,opened DESC'
    sessions:       sessions[user_id=id] order='time DESC'
    user_roles:     user_roles[user_id=id]
    roles:          roles[id=user_roles.role_id]

search:
    group:          user.id         # we should be able to grok this...
    params:
        user_id:    user.id
        name:       %name%
        email:      %user.email%
        role:       role.id
        role_id:    role.id
        role_name:  role.name


aliases:
    role_names:     roles.names
#   role_names:     CONCAT_WS(' ', 'user', GROUP_CONCAT(role.name SEPARATOR ' ')) AS role_names
